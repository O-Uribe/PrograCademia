{"ast":null,"code":"import * as Yup from \"yup\";\n/* \r\n\r\n    CAMPOS FORM:\r\n    - Nombre\r\n    - Apellido\r\n    - Email\r\n    - RUT // type:INT\r\n    - Contraseña\r\n    - Repetir contraseña\r\n    - Rol (Profesor, Estudiante)\r\n    - Año de ingreso (solo para estudiantes)\r\n\r\n*/\n\nvar formSchema = Yup.object().shape({\n  contraseña: Yup.string().required('Contraseña requerida').min(8, 'Debe tener al menos 8 caracteres'),\n  repetirContraseña: Yup.string().required('Confirmación requerida').oneOf([Yup.ref('contraseña')], 'Las contraseñas no coinciden'),\n  email: Yup.string().required('Email requerido').email('Email inválido'),\n  nombre: Yup.string().required('Nombre requerido'),\n  apellido: Yup.string().required('Apellido requerido'),\n  rut: Yup.number().required('RUT requerido').min(1000000, 'RUT inválido').positive().integer(),\n  rol: Yup.string().required('Rol requerido'),\n  añoIngreso: Yup.number().required('Año de ingreso requerido').positive().integer()\n});\nexport { formSchema };","map":{"version":3,"names":["Yup","formSchema","object","shape","contraseña","string","required","min","repetirContraseña","oneOf","ref","email","nombre","apellido","rut","number","positive","integer","rol","añoIngreso"],"sources":["C:/Users/nicor/OneDrive/Documentos/GitHub/Taller_Integracion_III/client/src/components/Form/actions/validator.js"],"sourcesContent":["import * as Yup from \"yup\";\r\n    /* \r\n    \r\n        CAMPOS FORM:\r\n        - Nombre\r\n        - Apellido\r\n        - Email\r\n        - RUT // type:INT\r\n        - Contraseña\r\n        - Repetir contraseña\r\n        - Rol (Profesor, Estudiante)\r\n        - Año de ingreso (solo para estudiantes)\r\n    \r\n    */\r\n\r\nconst formSchema = Yup.object().shape({\r\n  contraseña: Yup.string()\r\n    .required('Contraseña requerida')\r\n    .min(8, 'Debe tener al menos 8 caracteres'),\r\n    repetirContraseña: Yup.string()\r\n    .required('Confirmación requerida')\r\n    .oneOf([Yup.ref('contraseña')], 'Las contraseñas no coinciden'),\r\n  email: Yup.string()\r\n    .required('Email requerido')\r\n    .email('Email inválido'),\r\n  nombre: Yup.string()\r\n    .required('Nombre requerido'),\r\n  apellido: Yup.string()\r\n    .required('Apellido requerido'),\r\n  rut: Yup.number()\r\n    .required('RUT requerido')\r\n    .min(1000000, 'RUT inválido')\r\n    .positive().integer(),\r\n  rol: Yup.string()\r\n    .required('Rol requerido'),\r\n  añoIngreso: Yup.number()\r\n    .required('Año de ingreso requerido')\r\n    .positive().integer()\r\n});\r\n\r\nexport { formSchema }"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,UAAU,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;EACpCC,UAAU,EAAEJ,GAAG,CAACK,MAAJ,GACTC,QADS,CACA,sBADA,EAETC,GAFS,CAEL,CAFK,EAEF,kCAFE,CADwB;EAIlCC,iBAAiB,EAAER,GAAG,CAACK,MAAJ,GAClBC,QADkB,CACT,wBADS,EAElBG,KAFkB,CAEZ,CAACT,GAAG,CAACU,GAAJ,CAAQ,YAAR,CAAD,CAFY,EAEa,8BAFb,CAJe;EAOpCC,KAAK,EAAEX,GAAG,CAACK,MAAJ,GACJC,QADI,CACK,iBADL,EAEJK,KAFI,CAEE,gBAFF,CAP6B;EAUpCC,MAAM,EAAEZ,GAAG,CAACK,MAAJ,GACLC,QADK,CACI,kBADJ,CAV4B;EAYpCO,QAAQ,EAAEb,GAAG,CAACK,MAAJ,GACPC,QADO,CACE,oBADF,CAZ0B;EAcpCQ,GAAG,EAAEd,GAAG,CAACe,MAAJ,GACFT,QADE,CACO,eADP,EAEFC,GAFE,CAEE,OAFF,EAEW,cAFX,EAGFS,QAHE,GAGSC,OAHT,EAd+B;EAkBpCC,GAAG,EAAElB,GAAG,CAACK,MAAJ,GACFC,QADE,CACO,eADP,CAlB+B;EAoBpCa,UAAU,EAAEnB,GAAG,CAACe,MAAJ,GACTT,QADS,CACA,0BADA,EAETU,QAFS,GAEEC,OAFF;AApBwB,CAAnB,CAAnB;AAyBA,SAAShB,UAAT"},"metadata":{},"sourceType":"module"}